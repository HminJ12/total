reference 참조한다
베낄 거.
가장 먼저 해야 할 거 
1. 베끼는 거

반응형으로 

베리에이션  variation
->reference 찾아와서 바꾸는 것

주제 선정하고 내용, 사진 바꿀 것! (그날 수업 듣고 사진 바꾸는 작업하기)
사진, 이미지, 분위기 꼭 바꿀 것!!
css라도 바꾸기

집에서도 작업할 수 있도록 만들기
파일 복사해서 변형에서 복습하면서 사진, 내용 바꾸기

user agent style 초기화하는 작업을 reset

기본 agent style에서 margin과 padding이 들어가 있어서 없애주는 작업을 해야 한다.

!!수업듣고 혼자서 만들기
내가 만든 포트폴리오에는 주석 달지 말기!!!
내 포트폴리오 주석 다 없애기 
console log도 없애기

웹폰트에서 우리나라에서 많이 쓰는 폰트는 셰리프체(명조체 같은)는 가독성이 떨어져서 사용하지 않는다.
대부분 샨 셰리프체 -> 장식이 없는 맑은 고딕체 같은 글자꼴을 쓴다.
디자인 때문에 셰리프를 쓰기도 한다 가끔씩
셰리프와 샨 셰리프를 섞어 사용한다!!

많이 사용하는 글꼴체
나눔고딕 
노토산스 
(구글 font에서 cdn 링크로 긁어온다)

글꼴은 head에서 가장 위쪽에 해야 한다. meta 다음으로, link 중에서

css도 긁어서 사용하기

궁서체는 쓰지 말 것!!!

reset.css는 한번 만들어서 복사해서 계속 사용하기

사이트 분위기에 따라 글꼴 색 변경됨
사이트마다 달라지는 것 테마컬러, 메인컬러, 주조색 변하는 것
스타일 가이드라고 한다! 이걸 style.css로 저장하기

폰트가 가장 먼저 호출하고
reset style을 항상 먼저하고
style.css 호출함

요즘은 아이콘을 글자로 만들어서 사용함
아이콘 폰트 (그림처럼 생긴 글자)
아이콘폰트는 글자다!

웹사이트와 css 위주로 복습하기!!

웹사이트 만들 때 
1. 주제 정하기
2. 공통적인 색상을 정한다

body안에 
header는 웹사이트 1이다 대부분이
높이를 고정시킨다!

반응형 웹은
2분기 , 클 때 작을 때
1000이상 1000이하
공통적인 건 같이 설정 
다른 건 분기로 설정

header는 position fixed로 되어야 한다

ctrl + P 검색

부모가 padding 들어갔을 때는 inherit 쓰면 안 된다.
밖으로 삐져 나온다.

구조가 많이 다를 때 메뉴 2개를 만든다

액자 크기를 바꾼다음에 이미지를 꽉차게 넣는다.
h1의 크기를 바꾸고 이미지를 넣는다

html{ } 다른말로 :root{ }

--는 변수를 설정할 수 있다.
--main-color:


:root{
  --main-color: #9b8c7d;
}
->변수를 만든 거임.
변수를 만들면 호출을 해야 함.

:root는 html과 같은 객체이다.

스코프
안에 있는 애들만 사용할 수 있다.
html은 가장 상위 객체이니까 그 안에 있는 요소들은 다 쓸 수 있다.
전체 요소들이 사용할 수 있도록 스코프를 설정한 것이다.

------------------------------------
강제갱신 
Ctrl + Shift + R

vscode에서 파일명 찾기
Ctrl + P

해당 글자 찾기
Ctrl + F

색상 표기법
고유색상명
색상 넘버(색상번호) -> #000
rgb 표기법 숫자를 따로 적는 거

메뉴 ->아코디언 형태(접었다 폈다)
앵커만 신경쓰면 된다.


디자인 통일성 유지해야 함

:hover는 모바일에서 소용없음 (누르고 있는 순간)
-> 데스크탑에서만 디자인상 사용

CSS Pseudo-elements
가상엘리먼트


웹사이트 만들 때 motion 모아서 적용

------------------------------------
템플릿을 먼저 만든다.
반복적인 것들을 먼저 만들어야 한다.
header와 footer를 먼저 만든다.

템플릿 구조에 익숙해져야 한다!!

구조화가 되어 있어야 협업 가능하다.

사이트의 정체성 아이덴티티를 나타내는 곳 -> header

사이트의 추가정보를 달아주는 곳 -> footer

aside는 사이트의 도우미 역할, 부수적인 기능 

footer는 높이를 안 준다.
header만 높이를 준다!!

div는 가급적 사용 자제하기


footer 하단 중앙영역 하나 만들어야 한다


같은 템플릿을 쓰는데 출력을 다르게 할 때는 

메뉴에 아이콘 넣기...(나중에 포폴에)

address 태그 사용
주소, 전화번호...

카피라이터는 p태그 사용한다

ⓒ 특수문자 사용하면 안됨 -> 무조건 유니코드를 사용해야 함
ⓒ 유니코드로 &copy;

/ 이런 기호도 가급적 사용 자제해야 한다.


------------------------------------
헤더와 푸터를 다 만들고 나서
서브페이지 중 아무거나 하나 만든다.

페이지 구성이
본문만 다르고 나머지는 다 똑같다.

1.구조를 만든다
2.중앙 영역을 하나로 묶는다(사이드바와 본문)


초보자는 한 페이지 레이아웃을 본 다음에(모양을 잡고) 공통부분을 템플릿으로 만든다. 기본틀 확인 정도

이미지비율에 맞춰서 줄이고 싶을 때 높이를 주면 안 된다.
높이를 주는 게 훨씬 쉽다.

모바일과 데스크톱 따로 지정 높이를

본문, 사이드바는 높이를 주지 않는다.

주석 설명만 적지 말아라.
표시 정도는 괜찮음

공통된 부분을 php 만들고 include한 다음에 메뉴에 따라서 서브 페이지들을 save as해서 만들면 됨

side bar도 menu 구성을 사용한다.
원하는 부분을 출력한다.

보여주고 숨기는 것이 중요

1뎁스 li에 class를 준다.
1뎁스 li를 숨긴다

라우팅 처리
->주소를 이용해서 화면 구현하는 것
스크립트 사용

active 효과 도드라지는 거

------------------------------------
마침표 있을 때 br사용하는 게 좋음

어간별로 줄내림이 되어야 한다
word-break: keep-all; /* 단어별로 띄어쓰기 */


vw (뷰포트)
화면 넓이의 1%
화면 넓이에 따라서 결정된다
글자 크기 알아서 줄어들라고 사용함

!!display none인 상태에서는 transition이 죽는다(적용이 안 된다)



<video src="./video/light.mp4" autoplay muted loop playsinline></video> <!-- autoplay 자동재생 muted 소리가 없는 상태에서만 자동재생가능 loop 무한 반복 playsinline 사파리, 아이폰 계열 때문에 해줌-->


아이폰일 때는 video 태그를 죽이는 방법을 사용해야 함

넓이 높이를 다 줄 때는 object-fit을 할 수 있다.
object-fit 사용 후,
object-position: center; 사용해야 함.


------------------------------------
<link rel="shortcut icon" href="./img/icons/favicon.ico">
favicon 만들기

reset.css처럼 common.js를 만든다
모든 웹사이트 만들 때마다 사용하는 것

ready 이벤트 하는 이유 -> 비동기로 객체를 찾으려고, 
파싱을 하고 나서 객체를 찾으려고 사용하는 것

var 함수 내에서만 작동 
스코프 범위
var는 지역변수

window. 전역변수 (전체에서 사용할 수 있는 거)
ex) window.scrT
스코프 범위가 사라진다.


빵가루, 브레드크럼
위치 표시 
-> 모바일에서는 사용 안 함 (빼기 공간이 부족해서)



콘텐츠에 맞는 이미지를 구해야 한다.

img, video
block으로 display를 변경했을 때 기본 크기를 유지하려고 한다.
max-width를 지정해야 함

img는 꼭 넓이를 줘야 한다!!



------------------------------------
조건은 scroll

z-index는 층이 있다.

css에서 
같은 우선 순위일 때는 마지막 순서인 애가 적용된다.
.active는 항상 아래쪽에 적도록 한다!!

grayscale(1);
1이면 회색
saturate(0) 
 0이면 회색


과도한 motion은 안 좋음


공지사항과 자유게시판 똑같음

사이트 구현 차별화 설명..
안내 멘트

설계 -> 디자인
구현 -> 데이터베이스, 기능에 관련된 말 쓸 때 사용

테이블
th 스코프 속성 넣어야 한다
tbody는 꼭 넣어야 한다.
tfoot은 거의 사용 안 함

테이블
thead
tbody

표 제목을 넣고 싶으면 caption 태그 사용해야 함
table의 자식은 caption이다


form 태그 안의 제목은 legend
legend는 필드셋의 직계자식으로만 들어간다 
제목 넣고 싶으면 필드셋 만드로 legend를 넣는다


table은 block레벨과 비슷하다
block은 아니다
table은 여백이 없을 때 강제로 변한다
table 넓이가 유동적이다.(알아서 변한다)
table-layout 디폴트값이 auto이다
fixed로 바꾸면 넓이가 고정된다.
(띄어쓰기 때문에 생기는 문제 때문에 고정으로 바꾼다)


페이징


form 
fieldset 데이터 분류 목적

title 자세한 설명


------------------------------------
label은 접근성 때문에 사용한다.
placeholder는 UI 사용자의 편의를 위해 사용함

접근성 관련 속성 -> title

label 속성을 사용할 수 있는 태그는 option밖에 없다

label을 우선 쓰는데 못 쓸 경우 title을 사용한다

label은 form 요소 앞에 쓴다. 권장사항

form요소로 감쌌을 때만 유효성 검사와 UI를 편하게 해주는 기능 제공

preventDefault를 하면 유효성 검사 안 된다.


사용자들을 편하게 하는 거, 조작환경 UI

사용자들의 경험, 습관 UX


accept="image/*" -> 파일에서 image 확장자 전부 다


form 요소 안에서 button은 속성 type이 submit이 기본값이다


required 필수 입력 항목에 적용


------------------------------------
아코디언 메뉴, 탭 메뉴 만들 줄 알아야 한다...


페이지 추가하려면 menu.php와 sub.js 수정을 다 해줘야 한다!!

website presentation 프레젠테이션
유튜브 비율 맞춰야 한다.
유뷰브 비율 560 x 315 
iframe 태그 사용

텍스를 이미지에 넣지 않는다.

이미지 쓸 거면 반응형으로 나눠야 한다


갤러리 5개 형태 만들기로 함

케바케 케이스
언더바 케이스?

클릭하면 상세페이지..

lorem*1 


이미지를 키우고 내려야 한다.

scale은 대각선 비율이다.
넓이 비율이다.
넓이는 inch

------------------------------------
갤러리1 디자인 수정 -> 모달로
화면 덮으면서 나오는 게 모달이다.


단순구조는 flex가 편함

float 

라지 사이즈만 변경함

정사각형으로 만든다
안쪽에 position을 준다

li에 padding 절대 주면 안 된다.
padding 없이 꽉 채워야 한다.
규격이 딱 맞아야 한다.

동적인 엘리먼트를 추가하려면 바로 출력할 수 있게 해야 한다.
바로바로 추가해버리는 건 html에서 script에서 바로 쓴다
for구문을 이용한다

<script>
    for(var i = 1; i <= 9; i++){
      $(`.flex_container`).append(`
        <li>
          <a href="./img/sub3/${i}.jpg"> 
            <figure>
              <img src="./img/sub3/${i}.jpg" alt="">
              <figcaption>
                <h3>img title${i}</h3>
                <p>
                  Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                </p>
              </figcaption>
            </figure>
          </a> 
        </li> 
      `)
    }
  </script>

프론트엔드 방식이다.
이렇게 하는 이유 : 코드 수정관리 용이하다!

------------------------------------
load이벤트과 ready이벤트

문서만 파싱하느냐, 로딩까지 하느냐의 차이


isotope 카테고리 
임의의 class 이름을 준다


masonry와 isotope는 scroll모션과 패럴렉스 사용할 생각 말아라


------------------------------------
4월 3일 녹화에 안 들어간 거.

갤러리3.css 

.grid_container li{
  box-sizing: border-box;
  padding: 5px;
}


store 저장소
데이터 전부 저장하는 용도로 많이 사용함
배열, 등등 
필요한 자료를 저장해 놓는 자바스크립트 

100분의 1 -> 100vw
1대1 비율이다

100vh 



--------------------이런 구조를 가졌을 때 
figcation 안에 제목과 글자가 길이가 다르기 때문에
같게 하기 위해서 하는 방법
li 크기는 다 똑같다

1번
.feature ul li{
  display: flex;
  flex-direction: column;

li에 flex와 column을 준다

2번 
a가 이제 크기를 줄 수 있다
a에서는 높이만 해준다
.feature ul li a{
  /* display: block; */
  height: 100%;

3번 
figure에 flex와 column을 준다
.feature ul li a figure{
  display: flex;
  flex-direction: column;
  height: 100%;

4번 
figcaption에 남은 너비를 가지는 flex:1을 적용한다
.feature ul li a figure figcaption{
  flex: 1;


           <li>
            <a href=${v.link}>
              <figure>
                <img src="${v.path}" alt="">
                <figcaption>
                  <h3>${v.title}</h3>
                  <p>${v.desc}</p>
                </figcaption>
              </figure>
            </a>
          </li>

--------------------이런 구조를 가졌을 때 

복사
제이쿼리에서 
$(`.rolling ul`).clone().appendTo(`.rolling`)

바닐라에서는 
let clone = document.querySelector(`.rolling ul`).cloneNode(true)
document.querySelector(`.rolling`).appned(ulCopy)

------------------------------------

preloader.php 만들기

css spinner

닷홈에 주석 다 지우고 호스팅하기


http://hanmm512.dothome.co.kr/siteTemplate/
4월 5일 사이트 1개 완성한거

나중에는 
알드라이브 html폴더 안에 내 포트폴리오 메인 페이지 폴더를 만들고 그 안에 만든 웹사이트 하나씩 폴더를 넣는다.

